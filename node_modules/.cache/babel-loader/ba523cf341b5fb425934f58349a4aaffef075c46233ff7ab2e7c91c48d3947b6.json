{"ast":null,"code":"import { loginRequest, loginSuccess, loginFailure, clearMessage, loginLogout } from '../types/loginTypes';\nimport { AuthenticationDetails, CognitoUser, CognitoUserSession } from \"amazon-cognito-identity-js\";\nimport UseHandler from \"../../config/useHandler\";\nconst logRequest = () => {\n  return {\n    type: loginRequest\n  };\n};\nconst logSuccess = email => {\n  return {\n    type: loginSuccess,\n    payload: email\n  };\n};\nconst logFailure = msg => {\n  return {\n    type: loginFailure,\n    payload: msg\n  };\n};\nconst clearMsg = () => {\n  return {\n    type: clearMessage\n  };\n};\nexport const logout = () => {\n  localStorage.clear();\n  window.location.reload();\n  return {\n    type: loginLogout\n  };\n};\nexport const login = (username, password) => async dispatch => {\n  dispatch(logRequest());\n  console.log(username);\n  console.log(password);\n  // try {\n  const {\n    userPool\n  } = UseHandler();\n  const authenticationData = {\n    Username: username,\n    Password: password\n  };\n  console.log(authenticationData);\n  const authDetails = new AuthenticationDetails(authenticationData);\n  const userData = {\n    Username: username,\n    Pool: userPool\n  };\n  const congnitoUser = new CognitoUser(userData);\n  congnitoUser.authenticateUser(authDetails, {\n    onSuccess(result) {\n      console.log(result);\n\n      // localStorage.setItem('user', JSON.stringify(result));\n      localStorage.setItem('isAuthenticated', true);\n      // localStorage.setItem('data', JSON.stringify(result));\n      //   dispatch(logSuccess(result));\n      //history.push(\"/\");\n    }\n    // onFailure(err) {\n    //   const { message } = err;\n    //   setState({ ...state, error: message });\n    // }\n  });\n  // const { data } = await axiosFetch.post('/api/login', {\n  // \temail,\n  // \tpassword,\n  // });\n  // console.log(data);\n  // localStorage.setItem('user', JSON.stringify(data.data.nombre));\n  // localStorage.setItem('isAuthenticated', true);\n  // localStorage.setItem('data', JSON.stringify(data.data));\n\n  // dispatch(logSuccess(data));\n  // } catch (error) {\n  // \tdispatch(logFailure(error));\n  // \tsetTimeout(() => {\n  // \t\tdispatch(clearMsg());\n  // \t}, 3000);\n  // }\n};","map":{"version":3,"names":["loginRequest","loginSuccess","loginFailure","clearMessage","loginLogout","AuthenticationDetails","CognitoUser","CognitoUserSession","UseHandler","logRequest","type","logSuccess","email","payload","logFailure","msg","clearMsg","logout","localStorage","clear","window","location","reload","login","username","password","dispatch","console","log","userPool","authenticationData","Username","Password","authDetails","userData","Pool","congnitoUser","authenticateUser","onSuccess","result","setItem"],"sources":["/Users/willsegura/Documents/2Cloud/frotendWebComercio/src/redux/actions/loginActions.jsx"],"sourcesContent":["import {\n\tloginRequest,\n\tloginSuccess,\n\tloginFailure,\n\tclearMessage,\n\tloginLogout,\n} from '../types/loginTypes';\nimport {\n\tAuthenticationDetails,\n\tCognitoUser,\n\tCognitoUserSession\n  } from \"amazon-cognito-identity-js\";\n  import UseHandler from \"../../config/useHandler\";\nconst logRequest = () => {\n\treturn {\n\t\ttype: loginRequest,\n\t};\n};\nconst logSuccess = email => {\n\treturn {\n\t\ttype: loginSuccess,\n\t\tpayload: email,\n\t};\n};\nconst logFailure = msg => {\n\treturn {\n\t\ttype: loginFailure,\n\t\tpayload: msg,\n\t};\n};\nconst clearMsg = () => {\n\treturn {\n\t\ttype: clearMessage,\n\t};\n};\nexport const logout = () => {\n\tlocalStorage.clear();\n\twindow.location.reload();\n\treturn {\n\t\ttype: loginLogout,\n\t};\n};\n\nexport const login = (username, password) => async dispatch => {\n\tdispatch(logRequest());\n\tconsole.log(username);\n\tconsole.log(password);\n\t// try {\n\t\tconst { userPool } = UseHandler();\n\t\tconst authenticationData = {\n\t\t\tUsername: username,\n\t\t\tPassword: password\n\t\t  };\n\t\t  console.log(authenticationData);\n\t\tconst authDetails = new AuthenticationDetails(authenticationData);\n\t\tconst userData = {\n\t\tUsername: username,\n\t\tPool: userPool\n\t\t};\n\t\tconst congnitoUser = new CognitoUser(userData);\n\t\tcongnitoUser.authenticateUser(authDetails, {\n\t\t\tonSuccess(result: CognitoUserSession) {\n\t\t\t  console.log(result);\n\n\t\t// localStorage.setItem('user', JSON.stringify(result));\n\t\tlocalStorage.setItem('isAuthenticated', true);\n\t\t// localStorage.setItem('data', JSON.stringify(result));\n\t\t\t//   dispatch(logSuccess(result));\n\t\t\t  //history.push(\"/\");\n\t\t\t},\n\t\t\t// onFailure(err) {\n\t\t\t//   const { message } = err;\n\t\t\t//   setState({ ...state, error: message });\n\t\t\t// }\n\t\t  });\n\t\t// const { data } = await axiosFetch.post('/api/login', {\n\t\t// \temail,\n\t\t// \tpassword,\n\t\t// });\n\t\t// console.log(data);\n\t\t// localStorage.setItem('user', JSON.stringify(data.data.nombre));\n\t\t// localStorage.setItem('isAuthenticated', true);\n\t\t// localStorage.setItem('data', JSON.stringify(data.data));\n\n\t\t// dispatch(logSuccess(data));\n\t// } catch (error) {\n\t// \tdispatch(logFailure(error));\n\t// \tsetTimeout(() => {\n\t// \t\tdispatch(clearMsg());\n\t// \t}, 3000);\n\t// }\n};\n"],"mappings":"AAAA,SACCA,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,WAAW,QACL,qBAAqB;AAC5B,SACCC,qBAAqB,EACrBC,WAAW,EACXC,kBAAkB,QACV,4BAA4B;AACnC,OAAOC,UAAU,MAAM,yBAAyB;AAClD,MAAMC,UAAU,GAAG,MAAM;EACxB,OAAO;IACNC,IAAI,EAAEV;EACP,CAAC;AACF,CAAC;AACD,MAAMW,UAAU,GAAGC,KAAK,IAAI;EAC3B,OAAO;IACNF,IAAI,EAAET,YAAY;IAClBY,OAAO,EAAED;EACV,CAAC;AACF,CAAC;AACD,MAAME,UAAU,GAAGC,GAAG,IAAI;EACzB,OAAO;IACNL,IAAI,EAAER,YAAY;IAClBW,OAAO,EAAEE;EACV,CAAC;AACF,CAAC;AACD,MAAMC,QAAQ,GAAG,MAAM;EACtB,OAAO;IACNN,IAAI,EAAEP;EACP,CAAC;AACF,CAAC;AACD,OAAO,MAAMc,MAAM,GAAG,MAAM;EAC3BC,YAAY,CAACC,KAAK,EAAE;EACpBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EACxB,OAAO;IACNZ,IAAI,EAAEN;EACP,CAAC;AACF,CAAC;AAED,OAAO,MAAMmB,KAAK,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EAC9DA,QAAQ,CAACjB,UAAU,EAAE,CAAC;EACtBkB,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrBG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB;EACC,MAAM;IAAEI;EAAS,CAAC,GAAGrB,UAAU,EAAE;EACjC,MAAMsB,kBAAkB,GAAG;IAC1BC,QAAQ,EAAEP,QAAQ;IAClBQ,QAAQ,EAAEP;EACT,CAAC;EACDE,OAAO,CAACC,GAAG,CAACE,kBAAkB,CAAC;EACjC,MAAMG,WAAW,GAAG,IAAI5B,qBAAqB,CAACyB,kBAAkB,CAAC;EACjE,MAAMI,QAAQ,GAAG;IACjBH,QAAQ,EAAEP,QAAQ;IAClBW,IAAI,EAAEN;EACN,CAAC;EACD,MAAMO,YAAY,GAAG,IAAI9B,WAAW,CAAC4B,QAAQ,CAAC;EAC9CE,YAAY,CAACC,gBAAgB,CAACJ,WAAW,EAAE;IAC1CK,SAAS,CAACC,MAA0B,EAAE;MACpCZ,OAAO,CAACC,GAAG,CAACW,MAAM,CAAC;;MAEtB;MACArB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;MAC7C;MACC;MACE;IACF;IACA;IACA;IACA;IACA;EACC,CAAC,CAAC;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACD;EACA;EACA;EACA;EACA;EACA;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}