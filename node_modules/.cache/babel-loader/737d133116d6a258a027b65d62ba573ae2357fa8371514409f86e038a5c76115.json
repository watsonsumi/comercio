{"ast":null,"code":"import { loginRequest, loginSuccess, loginFailure, clearMessage, loginLogout } from '../types/loginTypes';\nimport { AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserPool } from \"amazon-cognito-identity-js\";\n//   import UseHandler from \"../../config/UseHandler\";\nconst Pool_Data = {\n  UserPoolId: 'us-east-1_WN7mX5v6o',\n  // Your user pool id here\n  ClientId: '556ootgckn7idfhepo7c0up52g'\n};\nconst userPool = new CognitoUserPool(Pool_Data);\nconst logRequest = () => {\n  return {\n    type: loginRequest\n  };\n};\nconst logSuccess = email => {\n  return {\n    type: loginSuccess,\n    payload: email\n  };\n};\nconst logFailure = msg => {\n  return {\n    type: loginFailure,\n    payload: msg\n  };\n};\nconst clearMsg = () => {\n  return {\n    type: clearMessage\n  };\n};\nexport const logout = () => {\n  localStorage.clear();\n  window.location.reload();\n  return {\n    type: loginLogout\n  };\n};\nexport const login = (username, password) => async dispatch => {\n  dispatch(logRequest());\n  try {\n    const authenticationData = {\n      Username: username,\n      Password: password\n    };\n    console.log(authenticationData);\n    const authDetails = new AuthenticationDetails(authenticationData);\n    const userData = {\n      Username: username,\n      Pool: userPool\n    };\n    const congnitoUser = new CognitoUser(userData);\n    congnitoUser.authenticateUser(authDetails, {\n      onSuccess(result) {\n        console.log(result);\n        localStorage.setItem('Token', JSON.stringify(result.accessToken.jwtToken));\n        localStorage.setItem('isAuthenticated', true);\n        localStorage.setItem('data', JSON.stringify(result));\n        dispatch(logSuccess(result));\n      }\n    });\n  } catch (error) {\n    dispatch(logFailure(error));\n    setTimeout(() => {\n      dispatch(clearMsg());\n    }, 3000);\n  }\n};","map":{"version":3,"names":["loginRequest","loginSuccess","loginFailure","clearMessage","loginLogout","AuthenticationDetails","CognitoUser","CognitoUserSession","CognitoUserPool","Pool_Data","UserPoolId","ClientId","userPool","logRequest","type","logSuccess","email","payload","logFailure","msg","clearMsg","logout","localStorage","clear","window","location","reload","login","username","password","dispatch","authenticationData","Username","Password","console","log","authDetails","userData","Pool","congnitoUser","authenticateUser","onSuccess","result","setItem","JSON","stringify","accessToken","jwtToken","error","setTimeout"],"sources":["/Users/willsegura/Documents/2Cloud/frotendWebComercio/src/redux/actions/loginActions.jsx"],"sourcesContent":["import {\n\tloginRequest,\n\tloginSuccess,\n\tloginFailure,\n\tclearMessage,\n\tloginLogout,\n} from '../types/loginTypes';\nimport {\n\tAuthenticationDetails,\n\tCognitoUser,\n\tCognitoUserSession,\n\tCognitoUserPool\n  } from \"amazon-cognito-identity-js\";\n//   import UseHandler from \"../../config/UseHandler\";\n  const Pool_Data = {\n    UserPoolId: 'us-east-1_WN7mX5v6o', // Your user pool id here\n    ClientId: '556ootgckn7idfhepo7c0up52g',\n};\nconst userPool = new CognitoUserPool(Pool_Data)\nconst logRequest = () => {\n\treturn {\n\t\ttype: loginRequest,\n\t};\n};\nconst logSuccess = email => {\n\treturn {\n\t\ttype: loginSuccess,\n\t\tpayload: email,\n\t};\n};\nconst logFailure = msg => {\n\treturn {\n\t\ttype: loginFailure,\n\t\tpayload: msg,\n\t};\n};\nconst clearMsg = () => {\n\treturn {\n\t\ttype: clearMessage,\n\t};\n};\nexport const logout = () => {\n\tlocalStorage.clear();\n\twindow.location.reload();\n\treturn {\n\t\ttype: loginLogout,\n\t};\n};\n\nexport const login = (username, password) => async dispatch => {\n\tdispatch(logRequest());\n\ttry {\n\t\tconst authenticationData = {\n\t\t\tUsername: username,\n\t\t\tPassword: password\n\t\t  };\n\t\t  console.log(authenticationData);\n\t\tconst authDetails = new AuthenticationDetails(authenticationData);\n\t\tconst userData = {\n\t\tUsername: username,\n\t\tPool: userPool\n\t\t};\n\t\tconst congnitoUser = new CognitoUser(userData);\n\t\tcongnitoUser.authenticateUser(authDetails, {\n\t\t\tonSuccess(result: CognitoUserSession) {\n\t\t\t  console.log(result);\n\n\t\tlocalStorage.setItem('Token', JSON.stringify(result.accessToken.jwtToken));\n\t\tlocalStorage.setItem('isAuthenticated', true);\n\t\tlocalStorage.setItem('data', JSON.stringify(result));\n\t\t\t  dispatch(logSuccess(result));\n\t\t\t},\n\t\t  });\n\t} catch (error) {\n\t\t\tdispatch(logFailure(error));\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch(clearMsg());\n\t\t\t}, 3000);\n\t}\n};\n"],"mappings":"AAAA,SACCA,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,YAAY,EACZC,WAAW,QACL,qBAAqB;AAC5B,SACCC,qBAAqB,EACrBC,WAAW,EACXC,kBAAkB,EAClBC,eAAe,QACP,4BAA4B;AACrC;AACE,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE,qBAAqB;EAAE;EACnCC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMC,QAAQ,GAAG,IAAIJ,eAAe,CAACC,SAAS,CAAC;AAC/C,MAAMI,UAAU,GAAG,MAAM;EACxB,OAAO;IACNC,IAAI,EAAEd;EACP,CAAC;AACF,CAAC;AACD,MAAMe,UAAU,GAAGC,KAAK,IAAI;EAC3B,OAAO;IACNF,IAAI,EAAEb,YAAY;IAClBgB,OAAO,EAAED;EACV,CAAC;AACF,CAAC;AACD,MAAME,UAAU,GAAGC,GAAG,IAAI;EACzB,OAAO;IACNL,IAAI,EAAEZ,YAAY;IAClBe,OAAO,EAAEE;EACV,CAAC;AACF,CAAC;AACD,MAAMC,QAAQ,GAAG,MAAM;EACtB,OAAO;IACNN,IAAI,EAAEX;EACP,CAAC;AACF,CAAC;AACD,OAAO,MAAMkB,MAAM,GAAG,MAAM;EAC3BC,YAAY,CAACC,KAAK,EAAE;EACpBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EACxB,OAAO;IACNZ,IAAI,EAAEV;EACP,CAAC;AACF,CAAC;AAED,OAAO,MAAMuB,KAAK,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK,MAAMC,QAAQ,IAAI;EAC9DA,QAAQ,CAACjB,UAAU,EAAE,CAAC;EACtB,IAAI;IACH,MAAMkB,kBAAkB,GAAG;MAC1BC,QAAQ,EAAEJ,QAAQ;MAClBK,QAAQ,EAAEJ;IACT,CAAC;IACDK,OAAO,CAACC,GAAG,CAACJ,kBAAkB,CAAC;IACjC,MAAMK,WAAW,GAAG,IAAI/B,qBAAqB,CAAC0B,kBAAkB,CAAC;IACjE,MAAMM,QAAQ,GAAG;MACjBL,QAAQ,EAAEJ,QAAQ;MAClBU,IAAI,EAAE1B;IACN,CAAC;IACD,MAAM2B,YAAY,GAAG,IAAIjC,WAAW,CAAC+B,QAAQ,CAAC;IAC9CE,YAAY,CAACC,gBAAgB,CAACJ,WAAW,EAAE;MAC1CK,SAAS,CAACC,MAA0B,EAAE;QACpCR,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;QAEtBpB,YAAY,CAACqB,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACH,MAAM,CAACI,WAAW,CAACC,QAAQ,CAAC,CAAC;QAC1EzB,YAAY,CAACqB,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;QAC7CrB,YAAY,CAACqB,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC;QACjDZ,QAAQ,CAACf,UAAU,CAAC2B,MAAM,CAAC,CAAC;MAC9B;IACC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdlB,QAAQ,CAACZ,UAAU,CAAC8B,KAAK,CAAC,CAAC;IAC3BC,UAAU,CAAC,MAAM;MAChBnB,QAAQ,CAACV,QAAQ,EAAE,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}